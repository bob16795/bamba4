def printf: extern fn[] -> Void;

def printHelp: fn[] -> Void {
    printf("usage bamba4 [-o <path>] input_file");
};

def Args: class {
    def input: prop std.Types.String;
    def output: prop std.Types.String;
};

def parse: fn[args: *std.Types.Slice(*u8[])] -> Args {
    def strcmp: extern fn[] -> i32;

    def result: new Args = null;
    result.output = std.Types.String.from("tmp.o");

    def i: new usize = usize(1);   

    while (*i < *args.len) {
        def arg: *args[*i];
        if (strcmp(arg, "-o") == i32(0)) {
            i = *i + usize(1);
            def arg: *args[*i];

            result.output.`drop`();
            result.output = std.Types.String.from(arg);
        } else {
            result.input.`drop`();
            result.input = std.Types.String.from(arg);
        }

        i = *i + usize(1);
    }

    return *result;
};

